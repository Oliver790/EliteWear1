<!DOCTYPE html>
<html lang="sk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ELITEwear | Futuristic Fashion</title>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700;800&family=Space+Grotesk:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        /* GLOBÁLNE ŠTÝLY */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        :root {
            --primary-bg: #0a0a0a;
            --secondary-bg: #111111;
            --card-bg: #1a1a1a;
            --text-primary: #ffffff;
            --text-secondary: #cccccc;
            --accent: #ff3c3c;
            --accent-gradient: linear-gradient(90deg, #ff3c3c, #ff6b6b);
            --neon-glow: 0 0 10px rgba(255, 60, 60, 0.7), 0 0 20px rgba(255, 60, 60, 0.4);
            --border: 1px solid #333;
        }
        
        body {
            background-color: var(--primary-bg);
            color: var(--text-primary);
            font-family: 'Montserrat', sans-serif;
            overflow-x: hidden;
            line-height: 1.6;
        }
        
        h1, h2, h3, h4, h5 {
            font-family: 'Space Grotesk', sans-serif;
            font-weight: 700;
        }
        
        /* PARTICLE BACKGROUND */
        #particles-js {
            position: fixed;
            width: 100%;
            height: 100%;
            z-index: -1;
        }
        
        /* WELCOME ANIMATION */
        .welcome-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: var(--primary-bg);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            z-index: 2000;
            transform: translateY(-100%);
            animation: slideIn 1s forwards 0.5s;
        }
        
        .welcome-content {
            text-align: center;
            color: white;
            opacity: 0;
            animation: fadeIn 1s forwards 1.5s;
        }
        
        .welcome-content h1 {
            font-size: 4rem;
            margin-bottom: 20px;
            background: var(--accent-gradient);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            text-shadow: var(--neon-glow);
        }
        
        .enter-btn {
            background: var(--accent-gradient);
            color: white;
            border: none;
            padding: 15px 40px;
            font-size: 1.1rem;
            border-radius: 50px;
            cursor: pointer;
            transition: all 0.3s;
            opacity: 0;
            animation: fadeInUp 1s forwards 2s;
            font-weight: bold;
            box-shadow: var(--neon-glow);
        }
        
        .enter-btn:hover {
            transform: translateY(-3px) scale(1.05);
            box-shadow: 0 5px 15px rgba(255,60,60,0.5);
        }
        
        /* HEADER */
        header {
            background: rgba(10, 10, 10, 0.9);
            backdrop-filter: blur(10px);
            padding: 15px 50px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
            border-bottom: var(--border);
            transition: all 0.3s ease;
        }
        
        header.scrolled {
            padding: 10px 50px;
            box-shadow: 0 5px 20px rgba(0,0,0,0.2);
        }
        
        .logo {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 1.8rem;
            font-weight: 800;
            cursor: pointer;
            letter-spacing: 1px;
            background: var(--accent-gradient);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            text-shadow: var(--neon-glow);
        }
        
        /* NAVIGATION */
        nav {
            display: flex;
            gap: 25px;
            align-items: center;
        }
        
        nav a {
            color: var(--text-primary);
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s;
            position: relative;
            padding: 5px 0;
        }
        
        nav a:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--accent-gradient);
            transition: width 0.3s ease;
        }
        
        nav a:hover {
            color: #ff3c3c;
        }
        
        nav a:hover:after {
            width: 100%;
        }
        
        /* LANGUAGE SWITCHER */
        .language-switcher {
            position: relative;
            margin-left: 15px;
        }
        
        .language-btn {
            background: rgba(255,255,255,0.1);
            border: var(--border);
            color: var(--text-primary);
            padding: 8px 15px;
            border-radius: 20px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s;
        }
        
        .language-btn:hover {
            background: rgba(255,255,255,0.2);
        }
        
        .language-options {
            position: absolute;
            top: 100%;
            right: 0;
            background: var(--secondary-bg);
            border: var(--border);
            border-radius: 8px;
            padding: 10px;
            margin-top: 5px;
            display: none;
            min-width: 120px;
            z-index: 1000;
        }
        
        .language-options.show {
            display: block;
            animation: fadeIn 0.3s ease;
        }
        
        .language-option {
            padding: 8px 12px;
            cursor: pointer;
            border-radius: 5px;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .language-option:hover {
            background: rgba(255,255,255,0.1);
        }
        
        .language-option.active {
            background: var(--accent-gradient);
            color: white;
        }
        
        /* SEARCH BAR */
        .search-container {
            display: flex;
            align-items: center;
            margin-left: 20px;
            flex-grow: 1;
            max-width: 400px;
            position: relative;
            background: rgba(255,255,255,0.1);
            border-radius: 25px;
            overflow: hidden;
            border: var(--border);
        }
        
        .search-container input {
            padding: 10px 15px;
            padding-right: 40px;
            border: none;
            outline: none;
            width: 100%;
            font-size: 0.9rem;
            background: transparent;
            color: var(--text-primary);
        }
        
        .search-container input::placeholder {
            color: var(--text-secondary);
        }
        
        .search-container button {
            position: absolute;
            right: 0;
            background: var(--accent-gradient);
            border: none;
            color: white;
            padding: 10px 15px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        
        .search-container button:hover {
            background: #e63232;
        }
        
        /* USER PROFILE */
        .user-profile {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: var(--accent-gradient);
            color: white;
            font-weight: bold;
            cursor: pointer;
            margin-left: 15px;
            transition: all 0.3s;
            box-shadow: var(--neon-glow);
        }
        
        .user-profile:hover {
            transform: scale(1.1);
        }
        
        /* CART */
        .cart {
            position: relative;
            cursor: pointer;
            margin-left: 20px;
        }
        
        .cart span {
            position: absolute;
            top: -10px;
            right: -10px;
            background: var(--accent-gradient);
            color: #fff;
            font-size: 0.8rem;
            padding: 2px 6px;
            border-radius: 50%;
            box-shadow: var(--neon-glow);
        }
        
        /* HERO SECTION */
        .hero {
            background: linear-gradient(rgba(0,0,0,0.7), rgba(0,0,0,0.7)), url('https://images.unsplash.com/photo-1604671801908-6f0c6a092c05?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80') center/cover no-repeat;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            position: relative;
            overflow: hidden;
        }
        
        .hero-content {
            position: relative;
            z-index: 1;
            max-width: 800px;
            padding: 0 20px;
            transform: translateY(50px);
            opacity: 0;
            animation: fadeInUp 1s forwards 0.5s;
        }
        
        .hero h1 {
            font-size: 4rem;
            margin-bottom: 20px;
            text-shadow: 0 2px 10px rgba(0,0,0,0.5);
        }
        
        .hero p {
            font-size: 1.2rem;
            margin-bottom: 30px;
            color: var(--text-secondary);
        }
        
        .hero button {
            margin-top: 20px;
            background: var(--accent-gradient);
            border: none;
            padding: 15px 30px;
            border-radius: 50px;
            font-size: 1rem;
            cursor: pointer;
            color: #fff;
            transition: all 0.3s;
            font-weight: bold;
            box-shadow: var(--neon-glow);
        }
        
        .hero button:hover {
            transform: translateY(-3px) scale(1.05);
            box-shadow: 0 5px 20px rgba(255,60,60,0.5);
        }
        
        .unavailable-badge {
            position: absolute;
            top: 20px;
            right: 20px;
            background: var(--accent-gradient);
            color: white;
            padding: 8px 15px;
            border-radius: 5px;
            font-size: 0.9rem;
            font-weight: bold;
            box-shadow: var(--neon-glow);
        }
        
        /* PRODUCTS SECTION */
        .products-container {
            padding: 100px 50px;
        }
        
        .section-title {
            text-align: center;
            margin-bottom: 60px;
            font-size: 2.5rem;
            position: relative;
            padding-bottom: 15px;
        }
        
        .section-title:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 3px;
            background: var(--accent-gradient);
        }
        
        .products {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 30px;
        }
        
        .product-card {
            background: var(--card-bg);
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 10px 25px rgba(0,0,0,0.2);
            transition: all 0.4s ease;
            position: relative;
            border: var(--border);
            transform-style: preserve-3d;
            perspective: 1000px;
        }
        
        .product-card:hover {
            transform: translateY(-10px) rotateX(5deg) rotateY(5deg);
            box-shadow: 0 15px 35px rgba(255,60,60,0.2);
        }
        
        .product-card img {
            width: 100%;
            height: 250px;
            object-fit: cover;
            display: block;
            transition: transform 0.5s;
        }
        
        .product-card:hover img {
            transform: scale(1.05);
        }
        
        .product-card .info {
            padding: 20px;
            text-align: center;
        }
        
        .product-card .info h2 {
            font-size: 1.3rem;
            margin-bottom: 10px;
            color: var(--text-primary);
        }
        
        .product-card .info p {
            color: var(--text-secondary);
            font-size: 0.9rem;
            margin-bottom: 15px;
            min-height: 40px;
        }
        
        .product-card .info .price {
            font-weight: bold;
            margin-bottom: 15px;
            color: #ff3c3c;
            font-size: 1.2rem;
        }
        
        .product-card .info select {
            margin-bottom: 15px;
            padding: 8px;
            border-radius: 5px;
            border: var(--border);
            width: 100%;
            cursor: pointer;
            background: var(--secondary-bg);
            color: var(--text-primary);
        }
        
        .product-card .info button {
            background: var(--accent-gradient);
            color: #fff;
            border: none;
            padding: 12px 25px;
            border-radius: 50px;
            cursor: pointer;
            transition: all 0.3s;
            width: 100%;
            font-weight: bold;
            box-shadow: var(--neon-glow);
        }
        
        .product-card .info button:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(255,60,60,0.3);
        }
        
        .product-card .info button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        /* FILTER PANEL */
        .filter-panel {
            position: fixed;
            top: 0;
            right: -400px;
            width: 350px;
            height: 100%;
            background: var(--secondary-bg);
            box-shadow: -5px 0 15px rgba(0,0,0,0.1);
            z-index: 1002;
            padding: 30px 20px;
            transition: right 0.3s ease-out;
            overflow-y: auto;
            border-left: var(--border);
        }
        
        .filter-panel.show {
            right: 0;
        }
        
        .filter-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.5);
            z-index: 1001;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s;
        }
        
        .filter-overlay.show {
            opacity: 1;
            visibility: visible;
        }
        
        .filter-panel h2 {
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            color: var(--text-primary);
        }
        
        .filter-panel h2 button {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--text-primary);
        }
        
        .filter-group {
            margin-bottom: 20px;
        }
        
        .filter-group h3 {
            margin-bottom: 10px;
            font-size: 1rem;
            color: var(--text-primary);
        }
        
        .filter-option {
            display: block;
            margin: 8px 0;
            cursor: pointer;
            color: var(--text-secondary);
        }
        
        .filter-option input {
            margin-right: 10px;
        }
        
        .filter-actions {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }
        
        .filter-actions button {
            flex: 1;
            padding: 10px;
            border-radius: 5px;
            border: none;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s;
        }
        
        .filter-apply {
            background: var(--accent-gradient);
            color: white;
        }
        
        .filter-apply:hover {
            background: #e63232;
        }
        
        .filter-reset {
            background: #333;
            color: white;
        }
        
        .filter-reset:hover {
            background: #444;
        }
        
        /* COLOR FILTERS */
        .color-filter {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
        }
        
        .color-option {
            width: 25px;
            height: 25px;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid transparent;
        }
        
        .color-option.selected {
            border-color: #ff3c3c;
        }
        
        /* KOŠÍK MODAL */
        #cartModal {
            display: none;
            position: fixed;
            right: 0;
            top: 0;
            width: 350px;
            height: 100%;
            background-color: var(--secondary-bg);
            box-shadow: -5px 0 20px rgba(0,0,0,0.2);
            padding: 20px;
            overflow-y: auto;
            z-index: 1001;
            color: var(--text-primary);
            border-left: var(--border);
        }
        
        #cartModal h2 {
            margin-bottom: 20px;
        }
        
        #cartModal .close {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--text-secondary);
            transition: color 0.3s;
        }
        
        #cartModal .close:hover {
            color: #ff3c3c;
        }
        
        .cart-item {
            display: flex;
            margin-bottom: 15px;
            position: relative;
            padding-bottom: 15px;
            border-bottom: 1px solid #333;
        }
        
        .cart-item img {
            width: 70px;
            height: 70px;
            object-fit: cover;
            border-radius: 8px;
            margin-right: 15px;
        }
        
        .cart-item .details {
            flex: 1;
        }
        
        .cart-item .details p {
            margin: 5px 0;
            font-size: 0.9rem;
        }
        
        .cart-item .details .price {
            font-weight: bold;
            color: #ff3c3c;
        }
        
        .cart-item .remove {
            position: absolute;
            right: 0;
            top: 0;
            color: var(--text-secondary);
            cursor: pointer;
            font-size: 1.2rem;
            transition: color 0.3s;
        }
        
        .cart-item .remove:hover {
            color: #ff3c3c;
        }
        
        /* CHECKOUT FORM */
        .checkout-form {
            display: none;
            margin-top: 20px;
        }
        
        .checkout-form h3 {
            margin-bottom: 15px;
        }
        
        .checkout-form label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        
        .checkout-form input, .checkout-form select {
            width: 100%;
            padding: 8px 10px;
            margin-bottom: 15px;
            border: 1px solid #333;
            border-radius: 4px;
            background: var(--card-bg);
            color: var(--text-primary);
        }
        
        .checkout-form button {
            background: var(--accent-gradient);
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
            font-weight: bold;
            transition: background-color 0.3s;
        }
        
        .checkout-form button:hover {
            background: #e63232;
        }
        
        /* PAYMENT METHOD STYLES */
        .payment-methods {
            margin-bottom: 20px;
        }
        
        .payment-method {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
            padding: 10px;
            border: 1px solid #333;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .payment-method:hover {
            border-color: #ff3c3c;
        }
        
        .payment-method.selected {
            border-color: #ff3c3c;
            background-color: rgba(255, 60, 60, 0.05);
        }
        
        .payment-method input {
            margin-right: 10px;
            width: auto;
        }
        
        .payment-method i {
            margin-right: 10px;
            font-size: 1.5rem;
            color: var(--text-secondary);
        }
        
        /* ORDER SUCCESS */
        .order-success {
            display: none;
            text-align: center;
            padding: 20px;
            background: var(--card-bg);
            border-radius: 5px;
            margin-top: 20px;
        }
        
        .order-success i {
            color: #4CAF50;
            font-size: 3rem;
            margin-bottom: 15px;
        }
        
        .order-success h3 {
            margin-bottom: 10px;
        }
        
        /* CHECKOUT BUTTON */
        #checkout {
            display: block;
            width: 100%;
            background: var(--accent-gradient);
            color: #fff;
            border: none;
            padding: 15px;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 20px;
            transition: all 0.3s;
            font-weight: bold;
            font-size: 1rem;
            box-shadow: var(--neon-glow);
        }
        
        #checkout:hover {
            background: #e63232;
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }
        
        /* AUTH MODAL STYLES */
        .auth-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.7);
            z-index: 2000;
            justify-content: center;
            align-items: center;
        }
        
        .auth-content {
            background: var(--secondary-bg);
            padding: 30px;
            border-radius: 10px;
            width: 100%;
            max-width: 400px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
            position: relative;
            animation: fadeIn 0.3s;
            color: var(--text-primary);
        }
        
        .auth-tabs {
            display: flex;
            margin-bottom: 20px;
            border-bottom: 1px solid #333;
        }
        
        .auth-tab {
            padding: 10px 20px;
            cursor: pointer;
            border-bottom: 3px solid transparent;
            transition: all 0.3s;
            font-weight: 500;
        }
        
        .auth-tab.active {
            border-bottom-color: #ff3c3c;
            color: #ff3c3c;
            font-weight: bold;
        }
        
        .close-auth {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--text-secondary);
            transition: color 0.3s;
        }
        
        .close-auth:hover {
            color: #ff3c3c;
        }
        
        .auth-form {
            display: none;
        }
        
        .auth-form.active {
            display: block;
        }
        
        .auth-form input {
            width: 100%;
            padding: 12px 15px;
            margin-bottom: 15px;
            border: 1px solid #333;
            border-radius: 5px;
            font-size: 1rem;
            background: var(--card-bg);
            color: var(--text-primary);
        }
        
        .auth-form button {
            width: 100%;
            padding: 12px;
            background: var(--accent-gradient);
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: bold;
            transition: all 0.3s;
        }
        
        .auth-form button:hover {
            background: #e63232;
        }
        
        .auth-switch {
            text-align: center;
            margin-top: 15px;
            color: var(--text-secondary);
        }
        
        .auth-switch a {
            color: #ff3c3c;
            cursor: pointer;
            text-decoration: none;
            font-weight: 500;
        }
        
        .auth-message {
            margin-top: 15px;
            padding: 10px;
            border-radius: 5px;
            text-align: center;
            display: none;
        }
        
        .auth-message.success {
            background: rgba(212, 237, 218, 0.2);
            color: #d4edda;
            border: 1px solid #155724;
        }
        
        .auth-message.error {
            background: rgba(248, 215, 218, 0.2);
            color: #f8d7da;
            border: 1px solid #721c24;
        }
        
        /* VERIFICATION MODAL */
        .verification-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.7);
            z-index: 2000;
            justify-content: center;
            align-items: center;
        }
        
        .verification-content {
            background: var(--secondary-bg);
            padding: 30px;
            border-radius: 10px;
            width: 100%;
            max-width: 400px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
            text-align: center;
            color: var(--text-primary);
        }
        
        .verification-content i {
            font-size: 3rem;
            color: #ff3c3c;
            margin-bottom: 15px;
        }
        
        .verification-content h2 {
            margin-bottom: 15px;
            color: var(--text-primary);
        }
        
        .verification-content p {
            margin-bottom: 20px;
            color: var(--text-secondary);
        }
        
        .verification-content button {
            padding: 10px 20px;
            background: var(--accent-gradient);
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s;
        }
        
        .verification-content button:hover {
            background: #e63232;
        }
        
        /* AUTH BUTTONS IN HEADER */
        .auth-btn {
            background: var(--accent-gradient);
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 50px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s;
            margin-left: 10px;
            box-shadow: var(--neon-glow);
        }
        
        .auth-btn:hover {
            background: #e63232;
            transform: translateY(-2px);
            box-shadow: 0 3px 10px rgba(255,60,60,0.3);
        }
        
        /* UNAVAILABLE PRODUCT */
        .unavailable-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            background: var(--accent-gradient);
            color: white;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 0.8rem;
            font-weight: bold;
            box-shadow: var(--neon-glow);
        }
        
        /* FOOTER */
        footer {
            background: linear-gradient(to right, #111, #222);
            color: #fff;
            text-align: center;
            padding: 60px 20px 30px;
            margin-top: 50px;
            position: relative;
        }
        
        footer:before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 1px;
            background: var(--accent-gradient);
        }
        
        footer p {
            margin: 10px 0;
            color: var(--text-secondary);
        }
        
        /* NO RESULTS MESSAGE */
        .no-results {
            grid-column: 1 / -1;
            text-align: center;
            padding: 50px;
            font-size: 1.2rem;
            color: var(--text-secondary);
        }
        
        /* MOBILE MENU */
        .mobile-menu-btn {
            display: none;
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
        }
        
        /* ANIMATIONS */
        @keyframes slideIn {
            from { transform: translateY(-100%); }
            to { transform: translateY(0); }
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @keyframes fadeOut {
            from { opacity: 1; }
            to { opacity: 0; display: none; }
        }
        
        /* RESPONSIVE DESIGN */
        @media (max-width: 1024px) {
            .hero h1 {
                font-size: 3rem;
            }
            
            .products {
                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            }
        }
        
        @media (max-width: 768px) {
            header {
                padding: 15px 20px;
                flex-wrap: wrap;
            }
            
            .hero h1 {
                font-size: 2.5rem;
            }
            
            .products-container {
                padding: 80px 20px;
            }
            
            nav {
                order: 3;
                width: 100%;
                justify-content: center;
                margin-top: 15px;
            }
            
            .search-container {
                margin: 15px 0 0 0;
                max-width: 100%;
            }
            
            .filter-panel {
                width: 85%;
            }
        }
        
        @media (max-width: 600px) {
            .hero h1 {
                font-size: 2rem;
            }
            
            .hero p {
                font-size: 1rem;
            }
            
            .section-title {
                font-size: 2rem;
            }
            
            .products {
                grid-template-columns: 1fr;
            }
            
            .welcome-content h1 {
                font-size: 2.5rem;
            }
            
            .mobile-menu-btn {
                display: block;
            }
            
            header nav {
                position: fixed;
                top: 70px;
                left: 0;
                right: 0;
                background: var(--secondary-bg);
                flex-direction: column;
                padding: 20px;
                gap: 15px;
                transform: translateY(-150%);
                transition: transform 0.3s ease;
                z-index: 999;
                border-bottom: var(--border);
            }
            
            header nav.show {
                transform: translateY(0);
            }
            
            .search-container {
                margin: 0;
            }
            
            #cartModal {
                width: 100%;
            }
        }

        /* 3D EFFECTS */
        .product-card {
            transform: translateZ(0);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .product-card:hover {
            transform: translateY(-10px) rotateX(5deg) rotateY(5deg) translateZ(20px);
        }
        
        /* GLOW EFFECTS */
        .glow {
            position: relative;
        }
        
        .glow:before {
            content: '';
            position: absolute;
            top: -10px;
            left: -10px;
            right: -10px;
            bottom: -10px;
            border-radius: inherit;
            background: var(--accent-gradient);
            z-index: -1;
            filter: blur(20px);
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .glow:hover:before {
            opacity: 0.6;
        }
    </style>
</head>
<body>
    <!-- Particle Background -->
    <div id="particles-js"></div>

    <!-- Welcome Overlay -->
    <div class="welcome-overlay" id="welcomeOverlay">
        <div class="welcome-content">
            <h1 id="welcomeTitle">ELITEwear</h1>
            <p id="welcomeSubtitle">ELITEwear - oblečenie, ktoré ťa posunie vyššie</p>
            <button class="enter-btn" onclick="enterSite()" id="enterBtn">Vstúpte do komfortu</button>
        </div>
    </div>

    <!-- Header -->
    <header id="mainHeader">
        <div class="logo">ELITEwear</div>
        <button class="mobile-menu-btn" onclick="toggleMobileMenu()">
            <i class="fas fa-bars"></i>
        </button>
        <nav id="mainNav">
            <a href="#" onclick="filterByCategory('topanky')" id="navShoes">Topánky</a>
            <a href="#" onclick="filterByCategory('oblecenie')" id="navClothing">Oblečenie</a>
            <a href="#" onclick="filterByCategory('doplnky')" id="navAccessories">Doplnky</a>
            <div class="search-container">
                <input type="text" id="searchInput" placeholder="Hľadať produkty...">
                <button onclick="searchProducts()"><i class="fas fa-search"></i></button>
            </div>
            <button class="filter-toggle" onclick="toggleFilterPanel()">
                <i class="fas fa-filter"></i> <span id="filterText">Filter</span>
            </button>
        </nav>
        <div class="language-switcher">
            <button class="language-btn" onclick="toggleLanguageOptions()">
                <i class="fas fa-globe"></i> <span id="currentLanguage">SK</span>
            </button>
            <div class="language-options" id="languageOptions">
                <div class="language-option active" onclick="changeLanguage('sk')">
                    <span>🇸🇰</span> Slovenčina
                </div>
                <div class="language-option" onclick="changeLanguage('en')">
                    <span>🇬🇧</span> English
                </div>
            </div>
        </div>
        <div class="auth-buttons">
            <button class="auth-btn" id="loginBtn" onclick="openAuthModal('login')">Prihlásiť sa</button>
            <button class="auth-btn" id="logoutBtn" style="display:none;" onclick="logout()">Odhlásiť sa</button>
            <div class="user-profile" id="userProfile" style="display:none;"></div>
        </div>
        <div class="cart" onclick="toggleCart()">
            <i class="fas fa-shopping-cart"></i> <span id="cartCount">0</span>
        </div>
    </header>

    <!-- FILTER OVERLAY -->
    <div class="filter-overlay" id="filterOverlay" onclick="toggleFilterPanel()"></div>

    <!-- FILTER PANEL -->
    <div class="filter-panel" id="filterPanel">
        <h2>
            <span id="filterTitle">Filtre</span>
            <button onclick="toggleFilterPanel()">&times;</button>
        </h2>
        
        <div class="filter-group">
            <h3 id="filterBrand">Značka</h3>
            <label class="filter-option">
                <input type="radio" name="brand" value="all" checked onchange="applyFilters()"> <span id="filterAllBrands">Všetky značky</span>
            </label>
            <label class="filter-option">
                <input type="radio" name="brand" value="Nike" onchange="applyFilters()"> Nike
            </label>
            <label class="filter-option">
                <input type="radio" name="brand" value="Adidas" onchange="applyFilters()"> Adidas
            </label>
            <label class="filter-option">
                <input type="radio" name="brand" value="Louis Vuitton" onchange="applyFilters()"> Louis Vuitton
            </label>
            <label class="filter-option">
                <input type="radio" name="brand" value="Denim Tears" onchange="applyFilters()"> Denim Tears
            </label>
        </div>
        
        <div class="filter-group">
            <h3 id="filterCategory">Kategória</h3>
            <label class="filter-option">
                <input type="radio" name="category" value="all" checked onchange="applyFilters()"> <span id="filterAllCategories">Všetky kategórie</span>
            </label>
            <label class="filter-option">
                <input type="radio" name="category" value="topanky" onchange="applyFilters()"> <span id="filterShoes">Topánky</span>
            </label>
            <label class="filter-option">
                <input type="radio" name="category" value="oblecenie" onchange="applyFilters()"> <span id="filterClothing">Oblečenie</span>
            </label>
            <label class="filter-option">
                <input type="radio" name="category" value="doplnky" onchange="applyFilters()"> <span id="filterAccessories">Doplnky</span>
            </label>
        </div>
        
        <div class="filter-group">
            <h3 id="filterPrice">Cena</h3>
            <label class="filter-option">
                <input type="radio" name="price" value="all" checked onchange="applyFilters()"> <span id="filterAllPrices">Všetky ceny</span>
            </label>
            <label class="filter-option">
                <input type="radio" name="price" value="0-100" onchange="applyFilters()"> <span id="filterPrice1">Do 100€</span>
            </label>
            <label class="filter-option">
                <input type="radio" name="price" value="100-200" onchange="applyFilters()"> <span id="filterPrice2">100€ - 200€</span>
            </label>
            <label class="filter-option">
                <input type="radio" name="price" value="200-500" onchange="applyFilters()"> <span id="filterPrice3">200€ - 500€</span>
            </label>
            <label class="filter-option">
                <input type="radio" name="price" value="500+" onchange="applyFilters()"> <span id="filterPrice4">Nad 500€</span>
            </label>
        </div>
        
        <div class="filter-group">
            <h3 id="filterColor">Farba</h3>
            <div class="color-filter">
                <div class="color-option selected" style="background: black;" onclick="filterByColor('black')" title="Čierna"></div>
                <div class="color-option" style="background: white; border: 1px solid #ddd;" onclick="filterByColor('white')" title="Biela"></div>
                <div class="color-option" style="background: red;" onclick="filterByColor('red')" title="Červená"></div>
                <div class="color-option" style="background: blue;" onclick="filterByColor('blue')" title="Modrá"></div>
                <div class="color-option" style="background: green;" onclick="filterByColor('green')" title="Zelená"></div>
                <div class="color-option" style="background: gray;" onclick="filterByColor('gray')" title="Šedá"></div>
                <div class="color-option" style="background: brown;" onclick="filterByColor('brown')" title="Hnedá"></div>
            </div>
        </div>
        
        <div class="filter-actions">
            <button class="filter-apply" onclick="applyFilters()"><span id="filterApply">Použiť filtre</span></button>
            <button class="filter-reset" onclick="resetFilters()"><span id="filterReset">Resetovať</span></button>
        </div>
    </div>

    <!-- KOŠÍK -->
    <div id="cartModal">
        <div class="close" onclick="toggleCart()">×</div>
        <h2 id="cartTitle">Váš košík</h2>
        <div id="cartItems"></div>
        <p id="total"></p>
        <button id="checkout" onclick="showCheckoutForm()"><span id="checkoutBtn">Pokračovať k platbe</span></button>
        
        <!-- CHECKOUT FORM -->
        <div class="checkout-form" id="checkoutForm">
            <h3 id="checkoutTitle">Dodacie údaje</h3>
            <form id="orderForm" action="https://formspree.io/f/xgvzdkgb" method="POST">
                <label for="email" id="emailLabel">Email:</label>
                <input type="email" id="email" name="email" required>
                
                <label for="name" id="nameLabel">Meno a priezvisko:</label>
                <input type="text" id="name" name="name" required>
                
                <label for="address" id="addressLabel">Adresa:</label>
                <input type="text" id="address" name="address" required>
                
                <label for="city" id="cityLabel">Mesto:</label>
                <input type="text" id="city" name="city" required>
                
                <label for="phone" id="phoneLabel">Telefón:</label>
                <input type="tel" id="phone" name="phone" required>
                
                <!-- Payment Method -->
                <div class="payment-methods">
                    <h3 id="paymentTitle">Spôsob platby</h3>
                    <div class="payment-method selected" onclick="selectPaymentMethod(this, 'dobierka')">
                        <input type="radio" name="payment" value="dobierka" checked>
                        <i class="fas fa-money-bill-wave"></i>
                        <span id="paymentCash">Dobierka</span>
                    </div>
                    <div class="payment-method" onclick="selectPaymentMethod(this, 'paypal')">
                        <input type="radio" name="payment" value="paypal">
                        <i class="fab fa-paypal"></i>
                        <span>PayPal</span>
                    </div>
                    <div class="payment-method" onclick="selectPaymentMethod(this, 'paysafecard')">
                        <input type="radio" name="payment" value="paysafecard">
                        <i class="fas fa-credit-card"></i>
                        <span>Paysafecard</span>
                    </div>
                </div>
                
                <!-- Skryté polia pre objednávku -->
                <input type="hidden" id="orderItems" name="orderItems">
                <input type="hidden" id="orderTotal" name="orderTotal">
                <input type="hidden" id="paymentMethod" name="paymentMethod" value="dobierka">
                
                <button type="submit" id="submitOrderBtn">Odoslať objednávku</button>
            </form>
        </div>
        
        <!-- ORDER SUCCESS -->
        <div class="order-success" id="orderSuccess">
            <i class="fas fa-check-circle"></i>
            <h3 id="successTitle">Ďakujeme za objednávku!</h3>
            <p id="successText1">Vaša objednávka bola úspešne odoslaná.</p>
            <p id="successText2">Potvrdenie vám bolo zaslané na email.</p>
        </div>
    </div>

    <!-- AUTH MODAL -->
    <div class="auth-modal" id="authModal">
        <div class="auth-content">
            <div class="close-auth" onclick="closeAuthModal()">×</div>
            <div class="auth-tabs">
                <div class="auth-tab active" onclick="switchAuthTab('login')" id="loginTab">Prihlásiť sa</div>
                <div class="auth-tab" onclick="switchAuthTab('register')" id="registerTab">Registrovať sa</div>
            </div>
            
            <!-- Login Form -->
            <div class="auth-form active" id="loginForm">
                <input type="email" id="loginEmail" placeholder="Email" required>
                <input type="password" id="loginPassword" placeholder="Heslo" required>
                <button onclick="login()" id="loginBtnModal">Prihlásiť sa</button>
                <div class="auth-switch">
                    <span id="noAccount">Nemáte účet?</span> <a onclick="switchAuthTab('register')" id="registerLink">Zaregistrovať sa</a>
                </div>
                <div class="auth-message" id="loginMessage"></div>
            </div>
            
            <!-- Registration Form -->
            <div class="auth-form" id="registerForm">
                <input type="text" id="registerName" placeholder="Meno a priezvisko" required>
                <input type="email" id="registerEmail" placeholder="Email" required>
                <input type="password" id="registerPassword" placeholder="Heslo (min. 6 znakov)" required>
                <input type="password" id="registerConfirmPassword" placeholder="Potvrďte heslo" required>
                <button onclick="register()" id="registerBtn">Zaregistrovať sa</button>
                <div class="auth-switch">
                    <span id="hasAccount">Máte účet?</span> <a onclick="switchAuthTab('login')" id="loginLink">Prihlásiť sa</a>
                </div>
                <div class="auth-message" id="registerMessage"></div>
            </div>
        </div>
    </div>

    <!-- VERIFICATION MODAL -->
    <div class="verification-modal" id="verificationModal">
        <div class="verification-content">
            <i class="fas fa-envelope"></i>
            <h2 id="verificationTitle">Overte svoj email</h2>
            <p id="verificationText">Na vašu emailovú adresu sme poslali overovací odkaz. Kliknite na neho pre aktiváciu vášho účtu.</p>
            <button onclick="closeVerificationModal()" id="verificationBtn">OK</button>
        </div>
    </div>

    <!-- Hero Section -->
    <section class="hero">
        <div class="hero-content">
            <h1 id="heroTitle">Nike Jordan 4</h1>
            <p id="heroSubtitle">Nová kolekcia limitovanej edície</p>
            <button onclick="filterByCategory('topanky')" id="heroButton">Pozrieť topánky</button>
            <div class="unavailable-badge">UNAVAILABLE</div>
        </div>
    </section>

    <!-- Products Section -->
    <div class="products-container">
        <h2 class="section-title" id="productsTitle">Naše produkty</h2>
        <section id="novinky" class="products">
            <!-- Products will be loaded here by JavaScript -->
        </section>
    </div>

    <!-- Footer -->
    <footer>
        <p>&copy; 2025 ELITEwear. Všetky práva vyhradené.</p>
        <p id="footerContact">Kontakt: info@elitewear.sk | +421 123 456 789</p>
    </footer>

    <script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
    <script>
        // Welcome animation control
        function enterSite() {
            const overlay = document.getElementById('welcomeOverlay');
            overlay.style.animation = 'fadeOut 0.5s forwards';
            
            setTimeout(() => {
                overlay.style.display = 'none';
                // Enable scrolling after animation
                document.body.style.overflow = 'auto';
            }, 500);
            
            // Start any animations on the main page
            checkScroll();
        }

        // Initialize particles
        document.addEventListener('DOMContentLoaded', function() {
            if (typeof particlesJS !== 'undefined') {
                particlesJS('particles-js', {
                    particles: {
                        number: { value: 80, density: { enable: true, value_area: 800 } },
                        color: { value: "#ff3c3c" },
                        shape: { type: "circle" },
                        opacity: { value: 0.5, random: true },
                        size: { value: 3, random: true },
                        line_linked: {
                            enable: true,
                            distance: 150,
                            color: "#ff3c3c",
                            opacity: 0.4,
                            width: 1
                        },
                        move: {
                            enable: true,
                            speed: 2,
                            direction: "none",
                            random: true,
                            straight: false,
                            out_mode: "out",
                            bounce: false
                        }
                    },
                    interactivity: {
                        detect_on: "canvas",
                        events: {
                            onhover: { enable: true, mode: "repulse" },
                            onclick: { enable: true, mode: "push" },
                            resize: true
                        }
                    },
                    retina_detect: true
                });
            }
            
            // Prevent scrolling during welcome animation
            document.body.style.overflow = 'hidden';
            
            renderProducts(products);
            updateAuthUI();
            
            // Add event listener for search input
            document.getElementById('searchInput').addEventListener('input', function(e) {
                activeFilters.search = e.target.value.toLowerCase();
                applyFilters();
            });
            
            // Form submission
            document.getElementById('orderForm').addEventListener('submit', function(e) {
                e.preventDefault();
                submitOrder();
            });
            
            // Add event listeners for auth buttons
            document.getElementById('loginBtn').addEventListener('click', function() {
                openAuthModal('login');
            });
            
            document.getElementById('logoutBtn').addEventListener('click', function() {
                logout();
            });
            
            // Check if there's a verification token in URL (simulated email verification)
            const urlParams = new URLSearchParams(window.location.search);
            const verificationToken = urlParams.get('verify');
            
            if (verificationToken) {
                verifyEmail(verificationToken);
                // Clean up URL
                window.history.replaceState({}, document.title, window.location.pathname);
            }
            
            // Header scroll effect
            window.addEventListener('scroll', function() {
                const header = document.getElementById('mainHeader');
                if (window.scrollY > 50) {
                    header.classList.add('scrolled');
                } else {
                    header.classList.remove('scrolled');
                }
            });
        });

        // Product data
        const products = [
            {
                id: 1,
                name: "Jordan 4",
                description: "Legendárne tenisky – pohodlie a štýl.",
                price: 149.99,
                category: "topanky",
                brand: "Nike",
                sizes: ["39", "40", "41", "42", "43", "44", "45", "46"],
                colors: ["black", "red"],
                image: "https://share.google/WmXrRaVyxS235L28v",
                available: true
            },
            
            {
                id: 3,
                name: "Louis Vuitton Opasok",
                description: "Elegantný opasok s monogramom.",
                price: 44.99,
                category: "doplnky",
                brand: "Louis Vuitton",
                sizes: ["S/M", "L/XL"],
                colors: ["brown"],
                image: "https://share.google/92W4LBrERpJ05Wsyt",
                available: true
            },
            {
                id: 4,
                name: "Louis Vuitton Peňaženka",
                description: "Luxusná kožená peňaženka – štýl a kvalita.",
                price: 59.99,
                category: "doplnky",
                brand: "Louis Vuitton",
                sizes: ["One Size"],
                colors: ["brown"],
                image: "https://share.google/PtlqedBaHcDnqB2Pa",
                available: true
            },
            {
                id: 5,
                name: "Denim Tears Krátke nohavice",
                description: "Prémiové denimové nohavice s výšivkou.",
                price: 99.99,
                category: "oblecenie",
                brand: "Denim Tears",
                sizes: ["S", "M", "L", "XL"],
                colors: ["blue"],
                image: "https://share.google/r1hgAgjd2falqMwvK",
                available: true
            },
            {
                id: 6,
                name: "Nike Air Force 1",
                description: "Klasické tenisky s čistým dizajnom.",
                price: 94.99,
                category: "topanky",
                brand: "Nike",
                sizes: ["38", "39", "40", "41", "42", "43", "44", "45", "46"],
                colors: ["white"],
                image: "https://share.google/tH9MPSwIbN21be7dE",
                available: true
            },
            {
                id: 7,
                name: "Nike Tech Fleece Mikina",
                description: "Moderná mikina s prémiovým materiálom.",
                price: 99.99,
                category: "oblecenie",
                brand: "Nike",
                sizes: ["S", "M", "L", "XL"],
                colors: ["black", "gray"],
                image: "https://static.nike.com/a/images/t_PDP_1280_v1/f_auto,q_auto:eco/0e7e4d0b-3a0a-4d8e-9b9f-1b9b9b9b9b9b/tech-fleece-mens-hoodie-2JZ6XZ.png",
                available: true
            },
            
        ];

        let cart = [];
        let filteredProducts = [...products];
        let activeFilters = {
            brand: 'all',
            category: 'all',
            price: 'all',
            color: 'all',
            search: ''
        };

        // User authentication variables
        let users = JSON.parse(localStorage.getItem('users')) || [];
        let currentUser = JSON.parse(localStorage.getItem('currentUser')) || null;

        // Go to home function
        function goToHome() {
            window.scrollTo({ top: 0, behavior: 'smooth' });
            resetFilters();
            document.getElementById('searchInput').value = '';
            activeFilters.search = '';
            renderProducts(products);
        }

        // Filter by category
        function filterByCategory(category) {
            document.querySelector(`input[name="category"][value="${category}"]`).checked = true;
            applyFilters();
            window.scrollTo({ top: document.querySelector('.products-container').offsetTop, behavior: 'smooth' });
        }

        // Filter by color
        function filterByColor(color) {
            // Update color filter UI
            document.querySelectorAll('.color-option').forEach(option => {
                option.classList.remove('selected');
            });
            event.target.classList.add('selected');
            
            activeFilters.color = color;
            applyFilters();
        }

        // Toggle mobile menu
        function toggleMobileMenu() {
            document.getElementById('mainNav').classList.toggle('show');
        }

        // Render products to the page
        function renderProducts(productsToRender) {
            const productsContainer = document.querySelector('.products');
            productsContainer.innerHTML = '';

            if (productsToRender.length === 0) {
                productsContainer.innerHTML = '<div class="no-results">Nenašli sa žiadne produkty, ktoré by vyhovovali vášmu vyhľadávaniu.</div>';
                return;
            }

            productsToRender.forEach((product, index) => {
                const productCard = document.createElement('div');
                productCard.className = 'product-card';
                productCard.dataset.category = product.category;
                productCard.dataset.brand = product.brand;
                productCard.dataset.price = product.price;

                let sizeOptions = '';
                product.sizes.forEach(size => {
                    sizeOptions += `<option value="${size}">${size}</option>`;
                });

                productCard.innerHTML = `
                    <div style="position:relative">
                        <img src="${product.image}" alt="${product.name}">
                        ${!product.available ? '<div class="unavailable-badge">UNAVAILABLE</div>' : ''}
                    </div>
                    <div class="info">
                        <h2>${product.name}</h2>
                        <p>${product.description}</p>
                        <div class="price">${product.price}€</div>
                        <select id="size-${product.id}" ${!product.available ? 'disabled' : ''}>
                            ${sizeOptions}
                        </select>
                        <button onclick="addToCart('${product.name}', ${product.price}, document.getElementById('size-${product.id}').value, '${product.image}', ${product.id})" 
                            ${!product.available ? 'disabled style="opacity:0.5; cursor:not-allowed"' : ''}>
                            ${product.available ? 'Kúpiť' : 'Nedostupné'}
                        </button>
                    </div>
                `;

                productsContainer.appendChild(productCard);
                
                // Show first 4 products immediately, others with delay
                if (index < 4) {
                    setTimeout(() => {
                        productCard.classList.add('show');
                    }, 0);
                }
            });

            // Re-check which products are visible after rendering
            setTimeout(checkScroll, 100);
        }

        // Apply filters
        function applyFilters() {
            // Get search term
            const searchTerm = activeFilters.search;
            
            // Get filter values
            const brandFilter = document.querySelector('input[name="brand"]:checked').value;
            const categoryFilter = document.querySelector('input[name="category"]:checked').value;
            const priceFilter = document.querySelector('input[name="price"]:checked').value;
            const colorFilter = activeFilters.color;
            
            // Update active filters
            activeFilters.brand = brandFilter;
            activeFilters.category = categoryFilter;
            activeFilters.price = priceFilter;

            filteredProducts = products.filter(product => {
                // Brand filter
                if (brandFilter !== 'all' && product.brand !== brandFilter) return false;
                
                // Category filter
                if (categoryFilter !== 'all' && product.category !== categoryFilter) return false;
                
                // Price filter
                if (priceFilter !== 'all') {
                    const [min, max] = priceFilter.split('-').map(Number);
                    if (priceFilter.endsWith('+')) {
                        if (product.price < 500) return false;
                    } else if (min === 0) {
                        if (product.price > max) return false;
                    } else {
                        if (product.price < min || product.price > max) return false;
                    }
                }
                
                // Color filter
                if (colorFilter && colorFilter !== 'all' && !product.colors.includes(colorFilter)) return false;
                
                // Search filter
                if (searchTerm && !product.name.toLowerCase().includes(searchTerm)) return false;
                
                return true;
            });

            renderProducts(filteredProducts);
        }

        // Reset all filters
        function resetFilters() {
            // Reset radio buttons
            document.querySelectorAll('input[name="brand"]').forEach(radio => {
                if (radio.value === 'all') radio.checked = true;
            });
            document.querySelectorAll('input[name="category"]').forEach(radio => {
                if (radio.value === 'all') radio.checked = true;
            });
            document.querySelectorAll('input[name="price"]').forEach(radio => {
                if (radio.value === 'all') radio.checked = true;
            });
            
            // Reset color filter
            document.querySelectorAll('.color-option').forEach(option => {
                option.classList.remove('selected');
            });
            document.querySelector('.color-option[style*="black"]').classList.add('selected');
            activeFilters.color = 'all';
            
            // Reset search
            document.getElementById('searchInput').value = '';
            activeFilters.search = '';
            
            // Apply reset
            applyFilters();
        }

        // Search products
        function searchProducts() {
            activeFilters.search = document.getElementById('searchInput').value.toLowerCase();
            applyFilters();
        }

        // Add to cart function
        function addToCart(name, price, size, img, id) {
            const product = products.find(p => p.id === id);
            if (!product.available) {
                alert('Tento produkt nie je momentálne dostupný.');
                return;
            }

            cart.push({
                id: Date.now(),
                productId: id,
                name, 
                price, 
                size, 
                img
            });
            updateCart();
            
            // Animation for cart icon
            const cartIcon = document.querySelector('.cart span');
            cartIcon.style.transform = 'scale(1.5)';
            setTimeout(() => {
                cartIcon.style.transform = 'scale(1)';
            }, 300);
            
            // Notification
            const notification = document.createElement('div');
            notification.style.position = 'fixed';
            notification.style.bottom = '20px';
            notification.style.right = '20px';
            notification.style.backgroundColor = '#4CAF50';
            notification.style.color = 'white';
            notification.style.padding = '15px';
            notification.style.borderRadius = '5px';
            notification.style.zIndex = '1000';
            notification.style.boxShadow = '0 4px 8px rgba(0,0,0,0.1)';
            notification.style.animation = 'fadeIn 0.5s, fadeOut 0.5s 2.5s';
            notification.style.animationFillMode = 'forwards';
            notification.textContent = `${name} bol pridaný do košíka`;
            
            document.body.appendChild(notification);
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        // Remove from cart
        function removeFromCart(id) {
            cart = cart.filter(item => item.id !== id);
            updateCart();
        }

        // Update cart UI
        function updateCart() {
            const cartItems = document.getElementById('cartItems');
            const cartCount = document.getElementById('cartCount');
            let totalPrice = 0;
            cartItems.innerHTML = '';
            
            if (cart.length === 0) {
                cartItems.innerHTML = '<p>Váš košík je prázdny</p>';
            } else {
                cart.forEach(item => {
                    totalPrice += item.price;
                    cartItems.innerHTML += `
                    <div class="cart-item">
                        <img src="${item.img}" alt="${item.name}">
                        <div class="details">
                            <p>${item.name}</p>
                            <p>Veľkosť: ${item.size}</p>
                            <p class="price">${item.price}€</p>
                        </div>
                        <div class="remove" onclick="removeFromCart(${item.id})">×</div>
                    </div>`;
                });
            }
            
            cartCount.innerText = cart.length;
            document.getElementById('total').innerText = `Celkom: ${totalPrice.toFixed(2)}€`;
            
            // Save cart to localStorage if user is logged in
            if (currentUser) {
                const userIndex = users.findIndex(u => u.email === currentUser.email);
                if (userIndex !== -1) {
                    users[userIndex].cart = cart;
                    localStorage.setItem('users', JSON.stringify(users));
                }
            }
        }

        // Show checkout form
        function showCheckoutForm() {
            if (cart.length === 0) {
                alert('Váš košík je prázdny. Najprv pridajte nejaké produkty.');
                return;
            }
            
            document.getElementById('checkout').style.display = 'none';
            document.getElementById('checkoutForm').style.display = 'block';
            
            // If user is logged in, pre-fill the form
            if (currentUser) {
                document.getElementById('email').value = currentUser.email;
                document.getElementById('name').value = currentUser.name;
            }
        }

        // Select payment method
        function selectPaymentMethod(element, method) {
            // Update UI
            document.querySelectorAll('.payment-method').forEach(el => {
                el.classList.remove('selected');
            });
            element.classList.add('selected');
            
            // Update hidden input
            document.getElementById('paymentMethod').value = method;
            
            // Update radio button
            document.querySelector(`input[value="${method}"]`).checked = true;
        }

        // Submit order
        function submitOrder() {
            const email = document.getElementById('email').value;
            const name = document.getElementById('name').value;
            const address = document.getElementById('address').value;
            const city = document.getElementById('city').value;
            const phone = document.getElementById('phone').value;
            const paymentMethod = document.getElementById('paymentMethod').value;
            
            // Pripravíme údaje o objednávke
            const orderItems = cart.map(item => 
                `${item.name} (Veľkosť: ${item.size}) - ${item.price}€`
            ).join('\n');
            
            const orderTotal = cart.reduce((sum, item) => sum + item.price, 0);
            
            // Naplníme skryté polia formulára
            document.getElementById('orderItems').value = orderItems;
            document.getElementById('orderTotal').value = `${orderTotal.toFixed(2)}€`;
            
            // Odoslanie formulára
            const form = document.getElementById('orderForm');
            
            // Vytvoríme nový FormData objekt a odošleme
            const formData = new FormData(form);
            
            fetch(form.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'Accept': 'application/json'
                }
            })
            .then(response => {
                if (response.ok) {
                    // Ukážeme success message
                    document.getElementById('checkoutForm').style.display = 'none';
                    document.getElementById('orderSuccess').style.display = 'block';
                    
                    // Reset košíka po 3 sekundách
                    setTimeout(() => {
                        cart = [];
                        updateCart();
                        form.reset();
                        document.getElementById('orderSuccess').style.display = 'none';
                        document.getElementById('checkout').style.display = 'block';
                        toggleCart();
                    }, 3000);
                } else {
                    throw new Error('Network response was not ok');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Pri odosielaní objednávky nastala chyba. Skúste to prosím znova.');
            });
        }

        // Toggle cart visibility
        function toggleCart() {
            const modal = document.getElementById('cartModal');
            modal.style.display = modal.style.display === 'block' ? 'none' : 'block';
        }

        // Animation for products when scrolling
        function checkScroll() {
            const productCards = document.querySelectorAll('.product-card:not(.show)');
            const triggerBottom = window.innerHeight / 5 * 4;

            productCards.forEach((card, index) => {
                const cardTop = card.getBoundingClientRect().top;
                
                if (cardTop < triggerBottom) {
                    // Staggered animation
                    setTimeout(() => {
                        card.classList.add('show');
                    }, index * 100); // Stagger animation with 100ms delay between each
                }
            });
        }

        // Add scroll event listener
        window.addEventListener('scroll', checkScroll);

        /* AUTHENTICATION FUNCTIONS */

        // Open auth modal
        function openAuthModal(tab = 'login') {
            document.getElementById('authModal').style.display = 'flex';
            switchAuthTab(tab);
            document.body.style.overflow = 'hidden';
        }

        // Close auth modal
        function closeAuthModal() {
            document.getElementById('authModal').style.display = 'none';
            document.body.style.overflow = 'auto';
            // Clear messages
            document.getElementById('loginMessage').style.display = 'none';
            document.getElementById('registerMessage').style.display = 'none';
        }

        // Switch between login and register tabs
        function switchAuthTab(tab) {
            const loginTab = document.querySelector('.auth-tab:nth-child(1)');
            const registerTab = document.querySelector('.auth-tab:nth-child(2)');
            const loginForm = document.getElementById('loginForm');
            const registerForm = document.getElementById('registerForm');
            
            if (tab === 'login') {
                loginTab.classList.add('active');
                registerTab.classList.remove('active');
                loginForm.classList.add('active');
                registerForm.classList.remove('active');
            } else {
                loginTab.classList.remove('active');
                registerTab.classList.add('active');
                loginForm.classList.remove('active');
                registerForm.classList.add('active');
            }
        }

        // Register new user
        function register() {
            const name = document.getElementById('registerName').value.trim();
            const email = document.getElementById('registerEmail').value.trim();
            const password = document.getElementById('registerPassword').value;
            const confirmPassword = document.getElementById('registerConfirmPassword').value;
            const messageElement = document.getElementById('registerMessage');
            
            // Validate inputs
            if (!name || !email || !password || !confirmPassword) {
                showAuthMessage(messageElement, 'error', 'Všetky polia sú povinné!');
                return;
            }
            
            if (password.length < 6) {
                showAuthMessage(messageElement, 'error', 'Heslo musí mať aspoň 6 znakov!');
                return;
            }
            
            if (password !== confirmPassword) {
                showAuthMessage(messageElement, 'error', 'Heslá sa nezhodujú!');
                return;
            }
            
            if (!validateEmail(email)) {
                showAuthMessage(messageElement, 'error', 'Zadajte platnú emailovú adresu!');
                return;
            }
            
            // Check if user already exists
            const userExists = users.some(user => user.email === email);
            if (userExists) {
                showAuthMessage(messageElement, 'error', 'Účet s týmto emailom už existuje!');
                return;
            }
            
            // Create new user
            const newUser = {
                id: Date.now(),
                name,
                email,
                password, // V reálnej aplikácii by ste mali heslo zahashovať!
                verified: true, // Pre testovacie účely
                cart: []
            };
            
            users.push(newUser);
            localStorage.setItem('users', JSON.stringify(users));
            
            // Automatické prihlásenie po registrácii
            currentUser = newUser;
            localStorage.setItem('currentUser', JSON.stringify(currentUser));
            
            showAuthMessage(messageElement, 'success', 'Registrácia úspešná! Ste prihlásený.');
            
            setTimeout(() => {
                closeAuthModal();
                updateAuthUI();
            }, 1500);
        }

        // Login user
        function login() {
            const email = document.getElementById('loginEmail').value.trim();
            const password = document.getElementById('loginPassword').value;
            const messageElement = document.getElementById('loginMessage');
            
            // Validate inputs
            if (!email || !password) {
                showAuthMessage(messageElement, 'error', 'Všetky polia sú povinné!');
                return;
            }
            
            // Find user
            const user = users.find(u => u.email === email);
            
            if (!user) {
                showAuthMessage(messageElement, 'error', 'Nesprávný email alebo heslo!');
                return;
            }
            
            if (user.password !== password) { // V reálnej aplikácii by ste mali porovnávať zahashované heslá
                showAuthMessage(messageElement, 'error', 'Nesprávny email alebo heslo!');
                return;
            }
            
            // Login successful
            currentUser = user;
            localStorage.setItem('currentUser', JSON.stringify(currentUser));
            
            // Load user's cart if exists
            if (user.cart && user.cart.length > 0) {
                cart = user.cart;
                updateCart();
            }
            
            showAuthMessage(messageElement, 'success', 'Prihlásenie úspešné!');
            
            setTimeout(() => {
                closeAuthModal();
                updateAuthUI();
            }, 1000);
        }

        // Logout user
        function logout() {
            currentUser = null;
            localStorage.removeItem('currentUser');
            updateAuthUI();
            alert('Boli ste odhlásený.');
        }

        // Verify email (simulated)
        function verifyEmail(token) {
            const userIndex = users.findIndex(u => u.verificationToken === token);
            
            if (userIndex !== -1) {
                users[userIndex].verified = true;
                users[userIndex].verificationToken = null;
                localStorage.setItem('users', JSON.stringify(users));
                
                // If the user is trying to log in
                if (currentUser && currentUser.email === users[userIndex].email) {
                    currentUser.verified = true;
                    localStorage.setItem('currentUser', JSON.stringify(currentUser));
                }
                
                // Show verification success
                document.getElementById('verificationText').textContent = 'Váš email bol úspešne overený! Teraz sa môžete prihlásiť.';
                showVerificationModal(users[userIndex].email);
            } else {
                document.getElementById('verificationText').textContent = 'Neplatný overovací odkaz. Skúste to prosím znova.';
                showVerificationModal();
            }
        }

        // Show verification modal
        function showVerificationModal(email = '') {
            if (email) {
                document.getElementById('verificationText').textContent = 
                    `Na adresu ${email} sme poslali overovací odkaz. Kliknite na neho pre aktiváciu vášho účtu.`;
            }
            document.getElementById('verificationModal').style.display = 'flex';
            document.body.style.overflow = 'hidden';
        }

        // Close verification modal
        function closeVerificationModal() {
            document.getElementById('verificationModal').style.display = 'none';
            document.body.style.overflow = 'auto';
        }

        // Update auth UI based on login state
        function updateAuthUI() {
            const loginBtn = document.getElementById('loginBtn');
            const logoutBtn = document.getElementById('logoutBtn');
            const userProfile = document.getElementById('userProfile');
            
            if (currentUser) {
                loginBtn.style.display = 'none';
                logoutBtn.style.display = 'block';
                userProfile.style.display = 'flex';
                userProfile.textContent = currentUser.name.charAt(0).toUpperCase();
            } else {
                loginBtn.style.display = 'block';
                logoutBtn.style.display = 'none';
                userProfile.style.display = 'none';
            }
        }

        // Helper function to show auth messages
        function showAuthMessage(element, type, message) {
            element.textContent = message;
            element.className = 'auth-message ' + type;
            element.style.display = 'block';
            
            // Hide message after 5 seconds
            setTimeout(() => {
                element.style.display = 'none';
            }, 5000);
        }

        // Helper function to validate email
        function validateEmail(email) {
            const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return re.test(email);
        }

        // Helper function to generate random token
        function generateToken() {
            return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);
        }

        // Toggle filter panel
        function toggleFilterPanel() {
            const panel = document.getElementById('filterPanel');
            const overlay = document.getElementById('filterOverlay');
            
            if (panel.classList.contains('show')) {
                panel.classList.remove('show');
                overlay.classList.remove('show');
                document.body.style.overflow = 'auto';
            } else {
                panel.classList.add('show');
                overlay.classList.add('show');
                document.body.style.overflow = 'hidden';
            }
        }

        // Language functions
        function toggleLanguageOptions() {
            document.getElementById('languageOptions').classList.toggle('show');
        }

        function changeLanguage(lang) {
            const options = document.querySelectorAll('.language-option');
            options.forEach(opt => opt.classList.remove('active'));
            event.target.classList.add('active');
            
            document.getElementById('currentLanguage').textContent = lang.toUpperCase();
            
            // Here you would implement actual language switching
            // For now, we'll just close the dropdown
            document.getElementById('languageOptions').classList.remove('show');
        }

        // Close language dropdown when clicking outside
        document.addEventListener('click', function(event) {
            const languageSwitcher = document.querySelector('.language-switcher');
            if (!languageSwitcher.contains(event.target)) {
                document.getElementById('languageOptions').classList.remove('show');
            }
        });
    </script>
</body>
</html>